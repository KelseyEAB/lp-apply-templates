// ================
// Custom Mixins
// ================

@function rem($pixels, $context: 16px) {
    @if (unitless($pixels)) {
      $pixels: $pixels * 1px;
    }
    @if (unitless($context)) {
      $context: $context * 1px;
    }
    @return $pixels / $context * 1rem;
  }
  
  // creates two column layout for radio group it is placed on. 
  
  //ex: 
  // form.mktoForm {
  //   .field_prospect_reason,
  //   .field_prospect_obstacle {
  //     @include radioGrid;
  //   }
  // }


  @mixin dashedTriangle{
    &:after{
      position:absolute;
      bottom:-.5em;
      right:-.5em;
      width:2em;
      height:2em;
      content:'';
      background: url("img-corner-triangle-lined.svg") no-repeat center /4em;
    }
  }

  //place on <a>
  @mixin expandingBottomBorder ($c_borderColor: $c-lightGrey){
    &:after{
      content:'';
      height:5px;
      width:0;
      background: $c_borderColor;
      display:block;
      position:absolute;
      bottom:2px;
      transition: width 0.25s ease-in-out;
      left:0;
    }

    &:hover,
    &:focus{
      &:after{
        width:100%;
      }
    }
  }

  @mixin buttonHover ($c_buttonColor: $c-darkBlue, $c_buttonHoverColor: $c-yellow, $c_fontColor: white, $c_fontColorHover: $c-darkBlue){
    color: $c_fontColor;
    overflow:hidden;
    background:transparent;

    &:before,
    &:after{
      content:'';
      position:absolute;
      left:0;
      bottom:0;
    }

    &:before{
      width:100%;
      height:100%;
      background: $c_buttonColor;
      z-index:-2;
    }

    &:after{
      height:0;
      width:0;
      border-left: 0px solid $c_buttonHoverColor;
      border-bottom: 0px solid $c_buttonHoverColor;
      border-right:0px solid transparent;
      border-top:0px solid transparent;
      z-index:-1;
    }
  
    &:hover,
    &:focus {
      color: $c_fontColorHover;

      &:after{
        border-width:350px;
      }
    }
  }
  
  @mixin squiggleBorder{
    &:after{
      background: url("img-underline-squiggle.svg") no-repeat center /contain;
      margin-top:.5rem;
      margin-bottom:1rem;
      content:"";
      display:block;
      height:.75rem;
      width:6rem;
      opacity:.3;
    }

    
  }
      
  @mixin radioGrid{
    .mktoRadioList {
      display: grid;
      grid-template-columns: repeat(2, 1rem 1fr);
      row-gap: .25em;
      margin: .5rem;
    }
  
    input[type=radio] ~ label {
      padding-left: .5em;
      padding-right: .75em;
    }
  }
  
  
  @mixin pseudo($display: block, $pos: absolute, $content: ''){
      content: $content;
      display: $display;
      position: $pos;
  }
  
  //place on ul element
  @mixin fancyList($c_backgroundColor: $c-blue, $c_fontColor:$c-darkBlue){

   li{
    list-style: none;
    display:flex;
    align-items:center;
    color:$c_fontColor;
    font-weight:600;
    padding-left:.5rem;
    border-left: 3px solid $c-yellow;
  
    &~li{
      margin-top:.5rem;
    }
   }
  
   @media (max-width: $mq-600){
  
    li{
      &:before{
        margin-right:.5rem;
      }
    }
   }
  }
  
  // adds defined-width border with space around it. 
  @mixin borderSpacer($_borderColor: $c-lightBlue, $_verticalMargins: 1rem, $_borderHeight: 5px, $_borderWidth: 60px){
    &:after{
      content:'';
      display:block;
      height:$_borderHeight;
      width: $_borderWidth;
      background: $_borderColor;
      margin:$_verticalMargins 0;
      z-index:10;
      position:relative;
    }
  }
  
  @mixin expandingBackground{
    position:relative;
  
    * {
      z-index:5;
      position:relative;
      color:white;
      text-shadow: 0 0 10px rgba(0,0,0, .5);
    }
  
    p:last-child{
      margin-bottom:0;
    }
  
    &:before{
      content: '';
      position:absolute;
      left:50%;
      top:0;
      height:100%;
      width:1000%;
      transform:translate(-50%, 0);
      background: $c-blue;
      animation: expandFromCenter 2s linear forwards;
    }
  }
  